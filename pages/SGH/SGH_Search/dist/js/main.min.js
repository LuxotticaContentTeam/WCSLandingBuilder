(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function () {
    var self = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}
module.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;
},{}],2:[function(require,module,exports){
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;
},{}],3:[function(require,module,exports){
var _typeof = require("./typeof.js")["default"];
function _regeneratorRuntime() {
  "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {
    return exports;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  var exports = {},
    Op = Object.prototype,
    hasOwn = Op.hasOwnProperty,
    defineProperty = Object.defineProperty || function (obj, key, desc) {
      obj[key] = desc.value;
    },
    $Symbol = "function" == typeof Symbol ? Symbol : {},
    iteratorSymbol = $Symbol.iterator || "@@iterator",
    asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator",
    toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
  function define(obj, key, value) {
    return Object.defineProperty(obj, key, {
      value: value,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), obj[key];
  }
  try {
    define({}, "");
  } catch (err) {
    define = function define(obj, key, value) {
      return obj[key] = value;
    };
  }
  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,
      generator = Object.create(protoGenerator.prototype),
      context = new Context(tryLocsList || []);
    return defineProperty(generator, "_invoke", {
      value: makeInvokeMethod(innerFn, self, context)
    }), generator;
  }
  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }
  exports.wrap = wrap;
  var ContinueSentinel = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });
  var getProto = Object.getPrototypeOf,
    NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);
  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      define(prototype, method, function (arg) {
        return this._invoke(method, arg);
      });
    });
  }
  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if ("throw" !== record.type) {
        var result = record.arg,
          value = result.value;
        return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) {
          invoke("next", value, resolve, reject);
        }, function (err) {
          invoke("throw", err, resolve, reject);
        }) : PromiseImpl.resolve(value).then(function (unwrapped) {
          result.value = unwrapped, resolve(result);
        }, function (error) {
          return invoke("throw", error, resolve, reject);
        });
      }
      reject(record.arg);
    }
    var previousPromise;
    defineProperty(this, "_invoke", {
      value: function value(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }
        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(innerFn, self, context) {
    var state = "suspendedStart";
    return function (method, arg) {
      if ("executing" === state) throw new Error("Generator is already running");
      if ("completed" === state) {
        if ("throw" === method) throw arg;
        return doneResult();
      }
      for (context.method = method, context.arg = arg;;) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }
        if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) {
          if ("suspendedStart" === state) throw state = "completed", context.arg;
          context.dispatchException(context.arg);
        } else "return" === context.method && context.abrupt("return", context.arg);
        state = "executing";
        var record = tryCatch(innerFn, self, context);
        if ("normal" === record.type) {
          if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue;
          return {
            value: record.arg,
            done: context.done
          };
        }
        "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg);
      }
    };
  }
  function maybeInvokeDelegate(delegate, context) {
    var methodName = context.method,
      method = delegate.iterator[methodName];
    if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel;
    var record = tryCatch(method, delegate.iterator, context.arg);
    if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel;
    var info = record.arg;
    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel);
  }
  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };
    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);
  }
  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal", delete record.arg, entry.completion = record;
  }
  function Context(tryLocsList) {
    this.tryEntries = [{
      tryLoc: "root"
    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) return iteratorMethod.call(iterable);
      if ("function" == typeof iterable.next) return iterable;
      if (!isNaN(iterable.length)) {
        var i = -1,
          next = function next() {
            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;
            return next.value = undefined, next.done = !0, next;
          };
        return next.next = next;
      }
    }
    return {
      next: doneResult
    };
  }
  function doneResult() {
    return {
      value: undefined,
      done: !0
    };
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), defineProperty(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) {
    var ctor = "function" == typeof genFun && genFun.constructor;
    return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name));
  }, exports.mark = function (genFun) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun;
  }, exports.awrap = function (arg) {
    return {
      __await: arg
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    void 0 === PromiseImpl && (PromiseImpl = Promise);
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () {
    return this;
  }), define(Gp, "toString", function () {
    return "[object Generator]";
  }), exports.keys = function (val) {
    var object = Object(val),
      keys = [];
    for (var key in object) keys.push(key);
    return keys.reverse(), function next() {
      for (; keys.length;) {
        var key = keys.pop();
        if (key in object) return next.value = key, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, exports.values = values, Context.prototype = {
    constructor: Context,
    reset: function reset(skipTempReset) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);
    },
    stop: function stop() {
      this.done = !0;
      var rootRecord = this.tryEntries[0].completion;
      if ("throw" === rootRecord.type) throw rootRecord.arg;
      return this.rval;
    },
    dispatchException: function dispatchException(exception) {
      if (this.done) throw exception;
      var context = this;
      function handle(loc, caught) {
        return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught;
      }
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i],
          record = entry.completion;
        if ("root" === entry.tryLoc) return handle("end");
        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc"),
            hasFinally = hasOwn.call(entry, "finallyLoc");
          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
          } else {
            if (!hasFinally) throw new Error("try statement without catch or finally");
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          }
        }
      }
    },
    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }
      finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);
      var record = finallyEntry ? finallyEntry.completion : {};
      return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);
    },
    complete: function complete(record, afterLoc) {
      if ("throw" === record.type) throw record.arg;
      return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;
    },
    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;
      }
    },
    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if ("throw" === record.type) {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      return this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      }, "next" === this.method && (this.arg = undefined), ContinueSentinel;
    }
  }, exports;
}
module.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;
},{"./typeof.js":4}],4:[function(require,module,exports){
function _typeof(obj) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(obj);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;
},{}],5:[function(require,module,exports){
// TODO(Babel 8): Remove this file.

var runtime = require("../helpers/regeneratorRuntime")();
module.exports = runtime;

// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=
try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}

},{"../helpers/regeneratorRuntime":3}],6:[function(require,module,exports){
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _loader = require("./modules/loader");
var _storeInfo = require("./modules/storeInfo");
var _utils = require("./modules/utils");
var _window$ct_wow__searc;
window.ct_wow__search.structure = {
  device: (0, _utils.getDevice)(),
  container: null,
  prod_list_container: null,
  prod_list: [],
  shuffleData: {
    missingProd: null,
    missingPos: null
  },
  placeholders: {
    utils: {
      mainCircle: {
        container: null,
        prodsCount: 3,
        radius: null
      },
      firstCircle: {
        container: null,
        prodsCount: 13,
        radius: null
      },
      secondCircle: {
        container: null,
        prodsCount: 14
      }
    },
    coordinates: []
  },
  init: function () {
    var _init = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(reopen) {
      var wcs_config;
      return _regenerator["default"].wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            (0, _utils.customLog)('WOW SEARCH INIT');
            window.ct_wow__search.inputManagement.answers.state = [];
            if (!reopen) {
              this.container = document.querySelector('#ct_wow__search');
            }
            if (this.device != 'D') {
              this.calcHeight();
            }
            if (!reopen) {
              this.prod_list_container = document.querySelector('.ct_wow__search__products_list');
              this.buildHtml();
              this.setPlaceholders(true);
            }
            this.entry();
            if (reopen) {
              _context.next = 14;
              break;
            }
            if (this.device === 'D') {
              this.setMouseMove();
            }
            this.setCloseHandler();
            document.addEventListener('loaderOut', this.animationIn);
            _context.next = 12;
            return _storeInfo.storeInfo.getInfo();
          case 12:
            wcs_config = _context.sent;
            if (wcs_config) {
              ct_wow__search.inputManagement.init();
            } else {
              console.log('NOT WCS CONFIG');
            }
          case 14:
            window.addEventListener('resize', this.refreshPositionsDebounced);
            // if (this.device === "M"){
            //   this.zoomHandler()
            // }
          case 15:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
    function init(_x) {
      return _init.apply(this, arguments);
    }
    return init;
  }(),
  calcHeight: function calcHeight() {
    (0, _utils.customLog)('Calc Height');
    window.ct_wow__search.structure.container.style.setProperty("--ct-wow-search-height", "".concat(window.innerHeight, "px"));
  },
  buildHtml: function buildHtml() {
    var _this = this;
    /**
     * Insert Products in HTML
     */
    var url_first_part = 'https://www.sunglasshut.com/us'; //tochange
    Object.keys(window.ct_wow__search.data.products).forEach(function (upc) {
      _this.prod_list_container.innerHTML += "\n      <li class=\"ct_wow_search__product\" data-upc=\"".concat(upc, "\">\n        <div class=\"ct_wow_search__product__wrap\">\n          <a href=\"").concat(url_first_part + window.ct_wow__search.data.products[upc].url, "\">\n              <div class=\"ct_wow_search__img_container\">\n                  <img src=\"").concat(window.ct_wow__search.data.products[upc].img ? window.ct_wow__search.data.products[upc].img : "https://assets.sunglasshut.com/is/image/LuxotticaRetail/" + upc + "__STD__shad__fr.png?impolicy=SGH_bgtransparent&width=640", "\" alt=\"").concat(upc, "\">\n              </div>\n          </a>\n        </div>\n      </li>\n      ");
    });
    /**
    * define start position for each prod
    */
    document.querySelectorAll('#ct_wow__search .ct_wow_search__product').forEach(function (elem) {
      _this.prod_list.push({
        originElem: elem,
        elem: elem.querySelector('.ct_wow_search__product__wrap'),
        x: elem.getBoundingClientRect().x + elem.clientWidth / 2,
        y: elem.getBoundingClientRect().y + elem.clientHeight / 2,
        scalingElem: elem.querySelector('.ct_wow_search__product__wrap a'),
        upc: elem.dataset.upc,
        pos: null,
        score: 0
      });
    });
  },
  refreshProdPos: function refreshProdPos() {
    this.prod_list.forEach(function (prod) {
      prod.x = prod.originElem.getBoundingClientRect().x + prod.originElem.clientWidth / 2, prod.y = prod.originElem.getBoundingClientRect().y + prod.originElem.clientWidth / 2;
    });
  },
  setPlaceholders: function setPlaceholders(first) {
    var _this2 = this;
    /**
     *  set placeholders, to positioning the products
     */
    var setPlaceholderCircle = function setPlaceholderCircle(first) {
      var circles = Object.keys(_this2.placeholders.utils);
      var comulativePos = 0;

      /**
       * inserting placeholders in the HTML
       * 3 circle based on the matching values of the aswsers
       * using function also for ripositioning the placeholder on resize
       */
      circles.forEach(function (circleID, circleN) {
        var container = _this2.placeholders.utils[circleID].container = document.querySelector("#ct_wow__search .ct_wow__search__pos_placeholders__".concat(circleID, " "));
        if (first) {
          // inserting placeholder in the HTML just the first time
          for (var i = 0; i < _this2.placeholders.utils[circleID].prodsCount; i++) {
            container.innerHTML += "\n              <div class=\"ct_wow__search__pos_placeholders__".concat(circleID, "__placeholder\"></div>\n            ");
          }
        }
        /**
         * disposing the placeholders in circles
         */
        _this2.placeholders.utils[circleID].radius = container.clientWidth / 2;
        var coordinates = (0, _utils.calcCoordinates)(_this2.placeholders.utils[circleID].prodsCount, _this2.placeholders.utils[circleID].radius);
        container.querySelectorAll('div').forEach(function (elem, i) {
          elem.style.top = coordinates[i].y + 'px';
          elem.style.left = coordinates[i].x + 'px';

          /**
           * saving each placeholder positions
           * if first set elem, coordinates and position
           * if !first so on risize, refresh coordinates values
           */
          if (first) {
            _this2.placeholders.coordinates.push({
              elem: elem,
              x: elem.getBoundingClientRect().x + elem.clientWidth / 2,
              y: elem.getBoundingClientRect().y + elem.clientHeight / 2,
              pos: i + comulativePos //adjust the correct position based on the current cirlce
            });
          } else {
            _this2.placeholders.coordinates[i + comulativePos].x = _this2.placeholders.coordinates[i + comulativePos].elem.getBoundingClientRect().x + _this2.placeholders.coordinates[i + comulativePos].elem.clientWidth / 2;
            _this2.placeholders.coordinates[i + comulativePos].y = _this2.placeholders.coordinates[i + comulativePos].elem.getBoundingClientRect().y + _this2.placeholders.coordinates[i + comulativePos].elem.clientHeight / 2;
          }
        });
        comulativePos += _this2.placeholders.utils[circleID].prodsCount;
      });
    };
    setPlaceholderCircle(first);
  },
  entry: function entry() {
    this.container.classList.add('ct_in');
    document.body.style.overflow = 'hidden';
  },
  // shuffle:function(missingValues){
  //   /**
  //    * random positioning the products
  //    * creating a clone of the original prods and pos(placeholders) arrays
  //    * get a random prod and a random pos, then remove the prod positioned and the placeholder used
  //    * recall recursively the function until all prods are positioned
  //    */
  //   if (missingValues === this.prod_list.length-1){    
  //     this.shuffleData.missingProd=[...this.prod_list];
  //     this.shuffleData.missingPos=[...this.placeholders.coordinates];

  //   }
  //   if (missingValues < 0){
  //     return
  //   }

  //   else{
  //     let prod_n = Math.floor(Math.random()*missingValues);
  //     let pos_n = Math.floor(Math.random()*missingValues);

  //     //saving for each prod the position asigned in absolute value [0,1,2...n-1]
  //     let currentProd = this.shuffleData.missingProd[prod_n]
  //     this.prod_list[this.prod_list.indexOf(currentProd)] = {...this.prod_list[this.prod_list.indexOf(currentProd)],elemPos:this.shuffleData.missingPos[pos_n].pos}

  //     //positioning the prod 
  //     this.shuffleData.missingProd[prod_n].elem.style.transform = `
  //       translate(
  //         ${this.shuffleData.missingPos[pos_n].x - this.shuffleData.missingProd[prod_n].x }px,
  //         ${this.shuffleData.missingPos[pos_n].y - this.shuffleData.missingProd[prod_n].y }px
  //       )`;

  //     //scaling the prod
  //     if (this.shuffleData.missingPos[pos_n].pos < 3){
  //       this.shuffleData.missingProd[prod_n].scalingElem.style.transform = "translate(-50%,-50%) scale(2)";
  //     }
  //     if (this.shuffleData.missingPos[pos_n].pos >= 3 && this.shuffleData.missingPos[pos_n].pos < (this.placeholders.utils.secondCircle.prodsCount + 3) ){
  //       this.shuffleData.missingProd[prod_n].scalingElem.style.transform = "translate(-50%,-50%) scale(1.1)";
  //     }
  //     if( this.shuffleData.missingPos[pos_n].pos >= (this.placeholders.utils.secondCircle.prodsCount + 3) ){
  //       this.shuffleData.missingProd[prod_n].scalingElem.style.transform = "translate(-50%,-50%) scale(.6)";
  //     }

  //     //removing from the clone arrays the prod positioned and the position used
  //     this.shuffleData.missingProd.splice(prod_n,1)    
  //     this.shuffleData.missingPos.splice(pos_n,1)    
  //     this.shuffle(missingValues-1)

  //   }

  //   if (missingValues === this.prod_list.length-1){    

  //     if (this.device != 'D'){
  //       window.ct_wow__search.structure.prod_list_container.style.transform = `scale(1)`
  //       this.prod_list_container.parentNode.scrollTop = 0;
  //       this.prod_list_container.parentNode.scrollLeft = this.prod_list_container.parentNode.clientWidth / 4;
  //     }

  //     this.refreshPositions()
  //     window.addEventListener('resize', this.refreshPositionsDebounced);
  //   }
  //   // this.prod_list;
  //   // this.placeholders.coordinates;
  // },
  rankingProducts: function rankingProducts(qIndex, aIndex) {
    var _this3 = this;
    window.ct_wow__search.inputManagement.answers.state[qIndex] = parseInt(aIndex);
    // console.log({question:qIndex,answer:aIndex});
    //calc each product score
    this.prod_list.forEach(function (prod) {
      prod.score = _this3.calcScore(prod.upc);
    });
    //ordering based on score
    this.prod_list.sort(function (a, b) {
      return a.score < b.score ? 1 : -1;
    });

    //positioning and scaling products based on order
    this.prod_list.forEach(function (prod, i) {
      prod.elem.style.transform = "\n      translate(\n        ".concat(_this3.placeholders.coordinates[i].x - prod.x, "px,\n        ").concat(_this3.placeholders.coordinates[i].y - prod.y, "px\n      )");
      if (i < 3) {
        prod.scalingElem.style.transform = "translate(-50%,-50%) scale(2)";
      }
      if (i >= 3 && i < _this3.placeholders.utils.secondCircle.prodsCount + 3) {
        prod.scalingElem.style.transform = "translate(-50%,-50%) scale(1.1)";
      }
      if (i >= _this3.placeholders.utils.secondCircle.prodsCount + 3) {
        prod.scalingElem.style.transform = "translate(-50%,-50%) scale(.6)";
      }
    });
    window.ct_wow__search.inputManagement.results.state = [this.prod_list[0].upc, this.prod_list[1].upc, this.prod_list[2].upc, this.prod_list[3].upc];
  },
  calcScore: function calcScore(upc) {
    var score = 0;
    window.ct_wow__search.inputManagement.answers.state.forEach(function (answer, question) {
      score += window.ct_wow__search.data.products[upc].specs[question][answer];
    });
    return score;
  },
  /**
   * apply debounce function to resize refresh, 
   * so it refresh the position only when the resize it's ended
   */

  refreshPositionsDebounced: (0, _utils.debounce)(function () {
    if (ct_wow__search.structure.device != 'D') {
      ct_wow__search.structure.prod_list_container.parentNode.scrollTop = 0;
      ct_wow__search.structure.prod_list_container.parentNode.scrollLeft = ct_wow__search.structure.prod_list_container.parentNode.clientWidth / 4;
    }
    if (ct_wow__search.structure.container.classList.contains('ct_shuffled')) {
      ct_wow__search.structure.setPlaceholders(false);
      ct_wow__search.structure.refreshProdPos();
      ct_wow__search.structure.adjustProdPos();
    }
  }),
  refreshPositions: function refreshPositions() {
    if (ct_wow__search.structure.device != 'D') {
      ct_wow__search.structure.prod_list_container.parentNode.scrollTop = 0;
      ct_wow__search.structure.prod_list_container.parentNode.scrollLeft = ct_wow__search.structure.prod_list_container.parentNode.clientWidth / 4;
    }
    if (this.container.classList.contains('ct_shuffled')) {
      ct_wow__search.structure.setPlaceholders(false);
      ct_wow__search.structure.refreshProdPos();
      ct_wow__search.structure.adjustProdPos();
    }
  },
  adjustProdPos: function adjustProdPos() {
    var _this4 = this;
    this.prod_list.forEach(function (prod, i) {
      prod.elem.style.transform = "\n      translate(\n        ".concat(_this4.placeholders.coordinates[i].x - prod.x, "px,\n        ").concat(_this4.placeholders.coordinates[i].y - prod.y, "px\n      )");
    });
  },
  setMouseMove: function setMouseMove() {
    var _this5 = this;
    this.prod_list_container.addEventListener('mousemove', function (e) {
      _this5.prod_list_container.style.transform = "translate(".concat(-(e.clientX - window.innerWidth / 2) * .01, "px,").concat(-(e.clientY - window.innerHeight / 2) * .01, "px)");
    });
    document.querySelector('#ct_wow__search__input').addEventListener('mouseenter', function (e) {
      _this5.prod_list_container.style.transform = "translate(0,0)";
    });
  },
  // zoomHandler:function(){
  //   var scaling = false;
  //   function touchHandler(event){
  //     if(event.touches.length > 1){

  //       console.log('start pinch',event)
  //       scaling = true;
  //       event.preventDefault()
  //     }
  //   }
  //   function touchMove(event){
  //     if(scaling){
  //       console.log('moving',event.scale)

  //       if (event.scale > 1){
  //         window.ct_wow__search_structure.prod_list_container.style.transform = `scale(${Math.min(1.25,event.scale)})`

  //       }else{
  //         window.ct_wow__search_structure.prod_list_container.style.transform = `scale(${Math.max(1,event.scale)})`
  //       }
  //     }
  //   }
  //   function touchEnd(event){
  //     if (scaling) {
  //       console.log('end',event)
  //       scaling = false;
  //     }
  //   }
  //   this.prod_list_container.addEventListener("touchstart", touchHandler, false);
  //   this.prod_list_container.addEventListener("touchmove", touchMove, false);
  //   this.prod_list_container.addEventListener("touchend", touchEnd, false);

  // },
  animationIn: function animationIn() {
    window.ct_wow__search.structure.prod_list_container.classList.add('ct_in');
  },
  setCloseHandler: function setCloseHandler() {
    var _this6 = this;
    this.container.querySelector('#ct_wow__search__close').addEventListener('click', function () {
      _this6.container.classList.remove('ct_in');
      document.body.style.overflow = 'auto';
      //reset structure
      _this6.resetStructure();
      //reset questions
      window.ct_wow__search.inputManagement.resetQuestions();
      window.removeEventListener('resize', window.ct_wow__search.structure.refreshPositionsDebounced);
    });
  },
  resetStructure: function resetStructure() {
    (0, _utils.customLog)('- RESET Structure -');
    window.ct_wow__search.structure.prod_list_container.style.transform = "scale(1)";
    this.prod_list_container.querySelectorAll('.ct_wow_search__product__wrap').forEach(function (prod) {
      prod.style.transform = "none";
      prod.querySelector('a').style.transform = "translate(-50%,-50%)";
    });
  }
};
window.ct_wow__search.inputManagement = {
  container: null,
  stepsCount: 0,
  blockerActive: false,
  progress: {
    container: null,
    current: null,
    state: 1,
    style: null
  },
  questions: {
    container: null,
    state: 0
  },
  answers: {
    container: null,
    state: []
  },
  buttons: {
    next: null,
    prev: null,
    results: null,
    restart: null
  },
  results: {
    container: null,
    state: []
  },
  init: function init(reopen) {
    this.setElements();
    this.fillData();
    this.setButtonsHandler();
  },
  setElements: function setElements() {
    this.container = document.querySelector('#ct_wow__search__input');
    this.progress.container = document.querySelector('.ct_wow__search__input_progress');
    this.progress.current = document.querySelector('.ct_wow__search__input_progress .ct_wow__search__input_progress__current');
    this.questions.container = document.querySelector('.ct_wow__search__input_questions');
    this.answers.container = document.querySelector('.ct_wow__search__input_answers');
    this.buttons.next = document.querySelector('.ct_wow__search__input_commands__next');
    this.buttons.prev = document.querySelector('.ct_wow__search__input_commands__prev');
    this.buttons.results = document.querySelector('.ct_wow__search__input_commands__results');
    this.buttons.restart = document.querySelector('.ct_wow__search__restart');
    this.results.container = document.querySelector('#ct_wow__search__results');
  },
  fillData: function fillData() {
    this.stepsCount = ct_wow__search.data.questions.length;
    this.progress.container.querySelector('.ct_wow__search__input_progress__current + span').innerHTML = " /".concat(this.stepsCount);
    this.updateProgress();
    this.updateQuestionCopy();
    this.buildAnswers();
    this.updateAnswer();
  },
  setButtonsHandler: function setButtonsHandler() {
    var _this7 = this;
    this.buttons.prev.addEventListener('click', function () {
      _this7.changeQuestions('prev');
    });
    this.buttons.next.addEventListener('click', function () {
      _this7.changeQuestions('next');
    });
    this.buttons.results.addEventListener('click', function () {
      _this7.showResult();
    });
    this.buttons.restart.addEventListener('click', function () {
      _this7.restartQuiz();
    });
  },
  updateProgress: function updateProgress(dir) {
    var _this8 = this;
    this.blockerActive = true;
    if (dir) {
      //set element positioning
      this.progress.current.dataset.next = this.progress.state;
      this.progress.container.style.setProperty('--ct-wow-search-input-progress-before-opacity', "1");
      this.progress.container.style.setProperty('--ct-wow-search-input-progress-after-opacity', "0");
      this.progress.current.querySelector('span').style.opacity = 0;
      this.progress.container.style.setProperty('--ct-wow-search-input-progress-before-translate', "translateY(0)");
      if (dir === 'next') {
        this.progress.container.style.setProperty('--ct-wow-search-input-progress-after-translate', "translateY(-100%)");
      } else {
        this.progress.container.style.setProperty('--ct-wow-search-input-progress-after-translate', "translateY(100%)");
      }
      setTimeout(function () {
        // start animation
        _this8.progress.current.classList.add('ct_animation');
        _this8.progress.container.style.setProperty('--ct-wow-search-input-progress-after-translate', "translateY(0%)");
        _this8.progress.container.style.setProperty('--ct-wow-search-input-progress-after-opacity', "1");
        if (dir === 'next') {
          _this8.progress.container.style.setProperty('--ct-wow-search-input-progress-before-translate', "translateY(100%)");
        } else {
          _this8.progress.container.style.setProperty('--ct-wow-search-input-progress-before-translate', "translateY(-100%)");
        }
        _this8.progress.container.style.setProperty('--ct-wow-search-input-progress-before-opacity', "0");
      }, 10);
    }
    setTimeout(function () {
      _this8.progress.container.querySelector('.ct_wow__search__input_progress__current span').innerHTML = _this8.progress.state;
      _this8.progress.current.dataset.current = _this8.progress.state;
      _this8.progress.current.querySelector('span').style.opacity = 1;
      _this8.progress.current.classList.remove('ct_animation');
      _this8.blockerActive = false;
    }, 410);
  },
  updateQuestionCopy: function updateQuestionCopy() {
    var _this9 = this;
    this.questions.container.querySelector('h3').style.opacity = 0;
    setTimeout(function () {
      _this9.questions.container.querySelector('h3').innerHTML = window.ct_wow__search.data.questions[_this9.progress.state - 1].question["en"];
      _this9.questions.container.querySelector('h3').style.opacity = 1;
    }, 400);
  },
  buildAnswers: function buildAnswers() {
    var answers = "";
    window.ct_wow__search.data.questions.forEach(function (question, qindex) {
      answers += "<div class=\"ct_wow__search__input_answer\" data-answer=\"".concat(qindex, "\">");
      question.answers.forEach(function (answer, aindex) {
        answers += "\n        <div class=\"ct_wow__search__button_wrap\">\n          <button class=\"ct_cta ct_cta__white \" data-q=\"".concat(qindex, "\" data-a=\"").concat(aindex, "\">").concat(answer["en"], "</button>\n        </div>\n        ");
      });
      answers += "</div>";
    });
    this.answers.container.innerHTML = answers;
    this.answersButtonHandler();
  },
  answersButtonHandler: function answersButtonHandler() {
    var _this10 = this;
    this.answers.container.querySelectorAll('button').forEach(function (button) {
      button.addEventListener('click', function () {
        if (!button.classList.contains('ct_active')) {
          if (!window.ct_wow__search.structure.container.classList.contains('ct_shuffled')) {
            window.ct_wow__search.structure.container.classList.add('ct_shuffled');
          }
          window.ct_wow__search.structure.refreshPositions();
          window.ct_wow__search.structure.rankingProducts(button.dataset.q, button.dataset.a);
          if (button.parentNode.parentNode.querySelector('button.ct_active')) {
            button.parentNode.parentNode.querySelector('button.ct_active').classList.remove('ct_active');
          }
          button.classList.add('ct_active');
          button.parentNode.parentNode.classList.add('ct_aswered');
          _this10.container.classList.add('ct_can_proceed');
          if (_this10.progress.state < _this10.stepsCount) {
            _this10.changeQuestions('next');
          } else {
            _this10.buttons.results.classList.remove('ct_disabled');
          }
        }
      });
    });
  },
  updateAnswer: function updateAnswer() {
    if (this.answers.container.querySelector('.ct_wow__search__input_answer.ct_active')) {
      this.answers.container.querySelector('.ct_wow__search__input_answer.ct_active').classList.remove('ct_active');
    }
    this.answers.container.querySelector(".ct_wow__search__input_answer[data-answer=\"".concat(this.progress.state - 1, "\"]")).classList.add('ct_active');
  },
  changeQuestions: function changeQuestions(dir) {
    if (!this.blockerActive) {
      if (dir === 'next') {
        this.progress.state += 1;
        if (this.progress.state === this.stepsCount && !this.buttons.next.classList.contains('ct_disabled')) {
          this.buttons.next.classList.add('ct_disabled');
          if (this.answers.container.querySelector(".ct_wow__search__input_answer[data-answer=\"".concat(this.progress.state - 1, "\"]")).classList.contains('ct_aswered')) {
            this.buttons.results.classList.remove('ct_disabled');
          }
        }
        if (this.progress.state === 1 && !this.buttons.results.classList.contains('ct_disabled')) {
          this.buttons.results.classList.add('ct_disabled');
          this.buttons.next.classList.remove('ct_disabled');
        }
        if (!this.answers.container.querySelector(".ct_wow__search__input_answer[data-answer=\"".concat(this.progress.state - 1, "\"]")).classList.contains('ct_aswered')) {
          this.container.classList.remove('ct_can_proceed');
        }
        if (this.buttons.prev.classList.contains('ct_disabled')) {
          this.buttons.prev.classList.remove('ct_disabled');
        }
      } else {
        this.progress.state -= 1;
        if (this.progress.state === 1 && !this.buttons.prev.classList.contains('ct_disabled')) {
          this.buttons.prev.classList.add('ct_disabled');
        }
        if (this.buttons.next.classList.contains('ct_disabled')) {
          this.buttons.next.classList.remove('ct_disabled');
          this.buttons.results.classList.add('ct_disabled');
        }
        if (this.answers.container.querySelector(".ct_wow__search__input_answer[data-answer=\"".concat(this.progress.state - 1, "\"]")).classList.contains('ct_aswered')) {
          this.container.classList.add('ct_can_proceed');
        }
      }
      this.updateProgress(dir);
      this.updateQuestionCopy();
      this.updateAnswer();
    }
  },
  showResult: function showResult() {
    var _this11 = this;
    this.results.container.classList.add('ct_in');
    this.results.container.classList.add('ct_loader_in');
    _loader.loader.loaderIn(2000, "results");
    this.setResult();
    setTimeout(function () {
      _this11.results.container.classList.remove('ct_loader_in');
    }, 2000);
  },
  setResult: function setResult() {
    var productsContainer = this.results.container.querySelector('#ct_wow__search__results_products');
    productsContainer.innerHTML = '';
    var url_first_part = 'https://www.sunglasshut.com/us'; //tochange

    this.results.state.forEach(function (upc) {
      productsContainer.innerHTML += "\n      <a href=\"".concat(url_first_part + window.ct_wow__search.data.products[upc].url, "\" class=\"ct_wow__search__results_product\">\n          <img src=\"").concat(window.ct_wow__search.data.products[upc].img ? window.ct_wow__search.data.products[upc].img : "https://assets.sunglasshut.com/is/image/LuxotticaRetail/" + upc + "__STD__shad__fr.png?impolicy=SGH_bgtransparent&width=640", "\" alt=\"").concat(upc, "\">\n          <span>").concat(window.ct_wow__search.data.products[upc].brand, "</span>\n        </a>\n      ");
    });
  },
  restartQuiz: function restartQuiz() {
    var _this12 = this;
    _loader.loader.loaderIn(1000, "restart");
    setTimeout(function () {
      window.ct_wow__search.structure.resetStructure();
      _this12.resetQuestions();
      _this12.results.container.classList.remove('ct_in');
      _this12.results.container.classList.add('ct_loader_in');
    }, 400);
  },
  resetQuestions: function resetQuestions() {
    (0, _utils.customLog)('resetQuestions');
    this.progress.state = 0;
    this.answers.container.querySelectorAll('button.ct_active').forEach(function (button) {
      return button.classList.remove('ct_active');
    });
    this.answers.container.querySelectorAll('.ct_aswered').forEach(function (aswered) {
      return aswered.classList.remove('ct_aswered');
    });
    this.container.classList.remove('ct_can_proceed');
    window.ct_wow__search.structure.container.classList.remove('ct_shuffled');
    this.results.container.classList.remove('ct_in');
    this.changeQuestions('next');
  }
};
if (!((_window$ct_wow__searc = window.ct_wow__search.structure) !== null && _window$ct_wow__searc !== void 0 && _window$ct_wow__searc.container)) {
  var div = document.createElement('div');
  div.id = "ct_wow__search__container";
  if (!window.ct_wow__search.template) {} else {
    div.innerHTML = window.ct_wow__search.template;
    document.querySelector(window.ct_wow__search.config.selector).appendChild(div);
    _loader.loader.init(1500);
    window.ct_wow__search.structure.init();
  }
}

},{"./modules/loader":7,"./modules/storeInfo":8,"./modules/utils":9,"@babel/runtime/helpers/asyncToGenerator":1,"@babel/runtime/helpers/interopRequireDefault":2,"@babel/runtime/regenerator":5}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loader = void 0;
var _utils = require("./utils");
var loader = {
  elem: null,
  loaderEvent: new CustomEvent('loaderOut'),
  init: function init(time) {
    this.elem = document.querySelector("#ct_wow__search__loader");
    this.loaderIn(time);
  },
  loaderIn: function loaderIn(time, type) {
    var _this = this;
    (0, _utils.customLog)('loader in');
    if (!type || type === 'init') {
      this.elem.querySelector('h3').innerHTML = 'Preparing your quiz...';
    }
    if (type === "restart") {
      this.elem.querySelector('h3').innerHTML = 'Restarting quiz...';
    }
    if (type === "results") {
      this.elem.querySelector('h3').innerHTML = 'Preparing your results...';
    }
    this.elem.classList.add('ct_in');
    setTimeout(function () {
      _this.loaderOut();
    }, time);
  },
  loaderOut: function loaderOut() {
    (0, _utils.customLog)('loader out');
    this.elem.classList.remove('ct_in');
    document.dispatchEvent(this.loaderEvent);
  }
};
exports.loader = loader;

},{"./utils":9}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeInfo = void 0;
var storeInfo = {
  homeUrl: location.origin + location.pathname,
  lang: null,
  lang_short: null,
  getInfo: function getInfo() {
    var time = 0;
    return new Promise(function (resolve, reject) {
      var interval = setInterval(function () {
        time += 200;
        if (window.wcs_config) {
          storeInfo.lang = wcs_config.locale.toLowerCase().replace('_', '-');
          storeInfo.lang_short = wcs_config.locale.match("^[^_]+")[0];
          clearInterval(interval);
          resolve(true);
        } else {
          if (time >= 10000) {
            clearInterval(interval);
            resolve(false);
          }
        }
      }, 400);
    });
  },
  getLang: function getLang(field) {
    var keys = Object.keys(field);
    if (keys.includes(this.lang)) {
      return field[this.lang];
    }
    if (keys.includes(this.lang_short)) {
      return field[this.lang_short];
    }
    return field['en'];
  }
};
exports.storeInfo = storeInfo;

},{}],9:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDevice = exports.debounce = exports.customLog = exports.calcCoordinates = void 0;
var calcCoordinates = function calcCoordinates(nSides, radius) {
  var originX = radius;
  var originY = radius;
  var dTheta = 2 * Math.PI / nSides;
  var theta = Math.PI / 2 + dTheta;
  var points = [];
  for (var i = 0; i < nSides; i++) {
    points.push({
      x: (originX + radius * Math.cos(theta)).toFixed(2),
      y: (originY + radius * Math.sin(theta)).toFixed(2)
    });
    theta += dTheta;
  }
  return points;
};
exports.calcCoordinates = calcCoordinates;
var debounce = function debounce(f, stop) {
  var timer;
  return function (event) {
    if (timer) clearTimeout(timer);
    timer = setTimeout(f, 500, event);
  };
};
exports.debounce = debounce;
var customLog = function customLog(log, entraStyle) {
  console.log('%c ' + log, "background:#E8DBBD;padding:3px 5px; border-radius:4px; color:#000;font-family:helvetica; ".concat(entraStyle, ";"));
};
exports.customLog = customLog;
var getDevice = function getDevice() {
  customLog('Get Device');
  return window.innerWidth > 1025 ? "D" : window.innerWidth < 1025 && window.innerWidth >= 768 ? "T" : window.innerWidth < 768 ? "M" : "not recognized";
};
exports.getDevice = getDevice;

},{}]},{},[6]);
