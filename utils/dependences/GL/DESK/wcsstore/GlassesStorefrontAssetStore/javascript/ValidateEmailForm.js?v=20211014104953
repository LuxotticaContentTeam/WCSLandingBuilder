/** 
 * @fileOverview This javascript is used across the site
 * @version 1.0
 */
EmailSignupForm ={	
	/**
	 * The email signup form.
	 */
	signupForm: $('#email-sign-up-form'),
	
	submitted: false,
	
	registerModal: $('#registerAfterOffers'),
	
	registerForm: $('#EmailRegisterForm'),
	
	setupClickEvents:function(){
		$(".closeRegisterModal").click(function(){
			EmailSignupForm.registerModal.dialog({width: 360});
		});
	},
	
	/**
	 * Setup validation on the email form.
	 */
	setupValidation: function(){
		var $signupForm = this.signupForm;
		var emailObj = this;
		
		$signupForm.each(function(){
			var f = $(this);
			
			f.validate ({
				onfocusout: false,
				onkeyup: false,
				onclick: false,
				errorClass: 'required',
				errorElement: 'span',
				ignoreTitle: true,
				rules:
				{
					email: {required:true, email:true}
				},
				messages: 
				{
					email: MessageHelper.messages["ERROR_EMAIL_EMPTY_FOOTER"]
				},
				errorPlacement: function (error, element)
				{
		       		$(error).insertAfter(f.find('[name=email]'));
				},
				highlight: function(element, errorClass) 
				{
				   $(element).addClass ("required");
				},
				unhighlight: function(element, errorClass) 
				{
				   $(element).removeClass ("required");
				},
				errorPlacement:function (error, element) {
					error.insertAfter(element);
				}
			});
		});
		
		$signupForm.submit(function(){
			if (!emailObj.submitted){
				emailObj.submit(emailObj, $(this));
			}
			return false;
		});
		
//		this.setupEmailRegisterModal();
		
	},
	
	/**
	 * Submit the email form.
	 */
	submit: function(emailObj, form){
		var $signupForm = $(form),
			$emailSuccessMessage = $('#successMessageEmail'),
			$emailErrorMessage = $('#errorMessageEmail'),
			$subscribedMessage = $('.subscribed'),
			$loggedInMessage = $('.logged'),
			hideRegModal = $.cookie("hideRegistrationModal");
			$("#email-sign-up-form button").attr("disabled", "disabled");
			var textButton = $("#email-sign-up-form button").text();
			$("#email-sign-up-form button").html('<i class="fa fa-spinner fa-spin"></i> ' + textButton);
			$('.mailing-box-form').show();
		
		$subscribedMessage.hide();
		$loggedInMessage.hide();
		$emailSuccessMessage.hide();
		$emailErrorMessage.hide();
		
		if ($signupForm.valid()){
//			$(".mailing-box").unbind('mouseenter mouseleave');
			emailObj.submitted = true;
			var submitURL = getAbsoluteURL() + 'EmailSubscription';
			var user = window.userDetails;
			
			$.ajax({
				url: submitURL,
				data: $signupForm.serialize(),
				dataType: 'json',
				type: 'post',
				complete: function(response){
					
					/* Sets the eaactivity cookie */
			        document.cookie = "eaactivity=true; path=/";
					
					console.log("login response", response.responseText);
					emailObj.submitted = false;
					try{
						var responseData = $.parseJSON(response.responseText);
						if(responseData['statusCode'] == '0' || responseData['statusCode'] == '200' || responseData['status'] == '0' || responseData['status'] == '200'){
							
							/* Set reward code returned from BE in the footer newsletter box */
							updateNewsletterBox({responseData: responseData, calledFrom: 'footerbox'});

							//Still want to show the success message.
							$emailSuccessMessage.html("<span>Thank you</span>" ).show();
							$emailSuccessMessage.detach().insertAfter($signupForm);
							$('#emailSignup').hide ();
							// close mail box after 0,5s
							setTimeout( function(){ 
								$('.mailing-box-form').hide();
								$('.mailing-box-message .mailing-box-message-sign-in').show();
								$emailSuccessMessage.hide ();
								}, 7000);

							//Analytics
							try{
							   var obj = {
							      id : 'SignupForm',
							      User_Email_MD5 : md5((responseData.email[0]).toLowerCase()), //@Blue
							      User_EmailOptin: ((responseData.optinStatus[0] == "true") ? '1' : '0')
							   };
							   tealium_data2track.push(obj);
							}catch(err){
								console.error(err);
							}
							
						}else if( (responseData['statusCode'] == '100' || responseData['statusCode'] == '300' || responseData['status'] == '100' || responseData['status'] == '300') && $signupForm.find('[name=showRegister]').val() == 'true'){
//							@Blue: Non avevamo i casi di test, non abbiamo testato questa casistica
							$emailErrorMessage.html("<span>This email is already in use.</span>" ).show();
							$emailErrorMessage.detach().insertAfter($signupForm);

							//Analytics
							try{
								var obj = {
									id : 'Account-Create-Tentative',
									Error_Source : 'User', 
									Error_Code : 'SignupForm - This email is already in use.'
								};
								tealium_data2track.push(obj);
							 }catch(err){
								 console.error(err);
							 }
						}else{
//							@Blue
//							Non avevamo i casi di test, non abbiamo testato questa casistica
							$emailErrorMessage.html("<span>"+ constants.error.ajax +"</span>" ).show();
							$emailErrorMessage.detach().insertAfter($signupForm);
							
							//Analytics
							try{
								var obj = {
									id : 'Account-Create-Tentative',
									Error_Source : 'User', 
									Error_Code : 'SignupForm - '+constants.error.ajax
								};
								tealium_data2track.push(obj);
							 }catch(err){
								 console.error(err);
							 }
						}
						
					}catch(err){
//						@Blue
//						Non avevamo i casi di test, non abbiamo testato questa casistica
//						MessageHelper.displayErrorMessage(constants.error.ajax);
						$emailErrorMessage.html("<span>"+ constants.error.ajax +"</span>" ).show();

						//Analytics
						try{
							var obj = {
								id : 'Account-Create-Tentative',
								Error_Source : 'User', 
								Error_Code : 'SignupForm - '+constants.error.ajax
							};
							tealium_data2track.push(obj);
						 }catch(err){
							 console.error(err);
						 }
					}
				}
			});
			
		}
		$("#email-sign-up-form button").removeAttr("disabled");
		$("#email-sign-up-form button").html(textButton);
//		$(".mailing-box").bind('mouseenter mouseleave');
		return false;
	},
	
	/**
	 * Set up the register modal that displays after opting in.
	 */
	setupEmailRegisterModal: function(){
		
		var options = {	
				autoOpen: false,
				draggable: false,
				resizable: false,
				modal: true,
				position : ['center'],
				zIndex: 9999,
				minWidth:360
			};
		this.registerModal.dialog(options);
		
		
		 if ($('#logonPassword').val () == '')
			 $('#logonPassword').show ().prev ('input').hide ();

		if ($('#logonPasswordVerify').val () == '')
			$('#logonPasswordVerify').show ().prev ('input').hide (); 
		
		var examRegisterParameters = $.extend(true, {}, window.registerParameters);
		examRegisterParameters.rules = {
			logonId	:{required:true,email:true},
			logonIdVerify : {required:true,email:true,equalTo: "#EmailRegisterForm input[name=logonId]"},
			logonPassword : {required:true, minlength:6},
			logonPasswordVerify :{required:true,equalTo :'#EmailRegisterForm input[name=logonPassword]'},
			optin_18yrs : {required:true}
		};
		examRegisterParameters.messages = {
			logonId	:{required:MessageHelper.messages['ERROR_Logon_model_EmailInvalid']},
			logonIdVerify : {required:MessageHelper.messages['ERROR_LOGON_MODEL_EMAIL_CONFIRM'],email:MessageHelper.messages['ERROR_LOGON_MODEL_EMAIL_CONFIRM'],equalTo: MessageHelper.messages['ERROR_EMAIL_MISMATCH']},
			logonPassword : {required:MessageHelper.messages['ERROR_PASSWORD_ENTER'],minlength:MessageHelper.messages["PASSWORD_MIN_LENGTH_ERROR"]},
			logonPasswordVerify :{required:MessageHelper.messages['ERROR_PASSWORD_RE_ENTER']},
			optin_18yrs : {required:MessageHelper.messages['EYE_EXAM_ERROR_NOT_18_YEARS_OLD']}
		};
		examRegisterParameters.onkeyup = false;
		examRegisterParameters.onfocusout = false;
		
		examRegisterParameters.submitHandler = function(form){
			var f = $(form);

			$.ajax({
				url: getAbsoluteURL(true) + 'UserRegistrationAddAjax',
				data: f.serializeArray(),
				dataType: 'jsonp',
				crossDomain: true,
				success: function(data) {
					if(data.success) {
						EmailSignupForm.registerModal.dialog('close');
						constants.ajaxParams.loggedIn = true;
						//utag.link(link_name:"emailSubscribe");
						location.reload();
					}
					else {
						f.find('.registrationFailureMessage').hide().html(data.errorMessage).fadeIn(400).delay(5000).fadeOut(400);
					}
				},
				error: function(jqXHR, textStatus, errorThrown) {
					f.find('.registrationFailureMessage').hide().html(data.errorMessage).fadeIn(400).delay(5000).fadeOut(400);
				}
			});
			
			return false;
		};
		this.registerForm.validate(examRegisterParameters);
		var rf = this.registerForm;
		this.registerForm.find('a.registration-modal-submit').click(function(){
			rf.submit();
			return false;
		});
		
		$('#create-account-email').on('change',function(){
				$('#EmailRegisterForm').find('input[name=logonIdVerify]').val($('#create-account-email').val());
		});

	}
}
